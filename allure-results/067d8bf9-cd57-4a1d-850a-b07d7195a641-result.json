{"name": "test_login_check", "status": "broken", "statusDetails": {"message": "Exception: Message:", "trace": "self = <pages.login_page.LoginPage object at 0x000001B1F61C4AF0>\n\n    def is_login_successful(self):\n        \"\"\"Check if login was successful\"\"\"\n    \n        # try:\n        #     time.sleep(.5)\n        #     user_info_el = self.wait.until(EC.visibility_of_element_located(self.USERINFO_SPAN))\n        #     print(\"\\n\\n userinfo element located\", user_info_el.text)\n        #     user_info = user_info_el.text.lower()\n        #     print(\"\\n\\n\", user_info)\n        #     if \"logged in\" in user_info:\n        #         return True\n        #     else:\n        #         return False\n        try:\n            # 等待 userInfo 元素的文本包含 \"logged in\"\n>           self.wait.until(EC.text_to_be_present_in_element(self.USERINFO_SPAN, \"logged in\"))\n\nsrc\\pages\\login_page.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"636bf17f106530d1c4033827eb8f6e59\")>, method = <function text_to_be_present_in_element.<locals>._predicate at 0x000001B1F6142170>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_login.TestLogin object at 0x000001B1F60F3790>, login_page = <pages.login_page.LoginPage object at 0x000001B1F61C4AF0>\n\n    def test_login_check(self, login_page):\n>       result = login_page.is_login_successful()\n\nsrc\\tests\\test_login.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.login_page.LoginPage object at 0x000001B1F61C4AF0>\n\n    def is_login_successful(self):\n        \"\"\"Check if login was successful\"\"\"\n    \n        # try:\n        #     time.sleep(.5)\n        #     user_info_el = self.wait.until(EC.visibility_of_element_located(self.USERINFO_SPAN))\n        #     print(\"\\n\\n userinfo element located\", user_info_el.text)\n        #     user_info = user_info_el.text.lower()\n        #     print(\"\\n\\n\", user_info)\n        #     if \"logged in\" in user_info:\n        #         return True\n        #     else:\n        #         return False\n        try:\n            # 等待 userInfo 元素的文本包含 \"logged in\"\n            self.wait.until(EC.text_to_be_present_in_element(self.USERINFO_SPAN, \"logged in\"))\n            return True\n    \n        except Exception as error:\n>           raise Exception(error)\nE           Exception: Message:\n\nsrc\\pages\\login_page.py:101: Exception"}, "start": 1735871402792, "stop": 1735871463166, "uuid": "60e4c425-0972-4a5b-b307-de6dc1bf0208", "historyId": "bf0a7c25b79c8432238450f77e9f6efa", "testCaseId": "bf0a7c25b79c8432238450f77e9f6efa", "fullName": "src.tests.test_login.TestLogin#test_login_check", "labels": [{"name": "parentSuite", "value": "src.tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Perry"}, {"name": "thread", "value": "7480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.test_login"}]}